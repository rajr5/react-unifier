name: NPM publish Continuous Deployment workflow

on:
  release:
    # This specifies that the build will be triggered when we publish a release
    types: [ published ]

jobs:
  build:
    # Run on latest version of ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # "ref" specifies the branch to check out.
          # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
          ref: ${{ github.event.release.target_commitish }}
      # install Node.js
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
          # Specifies the registry, this field is required!
          registry-url: https://registry.npmjs.org/
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.6.0
        with:
          mongodb-version: 4.4
      - name: Install project dependencies
        run: yarn install --frozen-lockfile
      # set up git since we will later push to the repo
      - run: git config --global user.name "GitHub CD bot"
      - run: git config --global user.email "github-cd-bot@nang.io"
      # upgrade npm version in package.json to the tag used in the release.
      - run: cd src && npm version ${{ github.event.release.tag_name }}
      # build the project
      - run: yarn build
      # run tests just in case
      - run: yarn test
      # publish to NPM -> there is one caveat, continue reading for the fix
      - run: cd src && npm publish
        env:
          # Use a token to publish to NPM. See below for how to set it up
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      # push the version changes to GitHub
      - run: git pull --ff-only && git push
        env:
          # The secret is passed automatically. Nothing to configure.
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: bots
          SLACK_COLOR: "#4BB543"
          # SLACK_MESSAGE: "Post Content :rocket:"
          SLACK_TITLE: Released react-unifier@${{ github.event.release.target_commitish }}
          SLACK_USERNAME: Flourish
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
